--- angular.json ---
```json
{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "my-angular-project": {
      "projectType": "application",
      "schematics": {},
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/my-angular-project",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.json",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "my-angular-project:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "my-angular-project:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "my-angular-project:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": []
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "tsconfig.json",
              "tsconfig.app.json",
              "tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    }
  },
  "defaultProject": "my-angular-project"
}
```

--- package.json ---
```json
{
  "name": "my-angular-project",
  "version": "1.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~15.2.0",
    "@angular/common": "~15.2.0",
    "@angular/compiler": "~15.2.0",
    "@angular/core": "~15.2.0",
    "@angular/forms": "~15.2.0",
    "@angular/platform-browser": "~15.2.0",
    "@angular/platform-browser-dynamic": "~15.2.0",
    "@angular/router": "~15.2.0",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.12.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~15.2.0",
    "@angular/cli": "~15.2.0",
    "@angular/compiler-cli": "~15.2.0",
    "@types/node": "^12.11.1",
    "typescript": "~4.9.4"
  }
}
```

--- tsconfig.json ---
```json
{
  "compileOnSave": false,
  "compilerOptions": {
    "baseUrl": "./",
    "outDir": "./dist/out-tsc",
    "sourceMap": true,
    "declaration": false,
    "downlevelIteration": true,
    "experimentalDecorators": true,
    "module": "ESNext",
    "moduleResolution": "Node",
    "importHelpers": true,
    "target": "ES2020",
    "typeRoots": [
      "node_modules/@types"
    ],
    "lib": [
      "ES2020",
      "dom"
    ]
  }
}
```

--- src/app/app.component.ts ---
```typescript
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent {
  title = 'my-angular-project';
}
```

--- src/app/app.module.ts ---
```typescript
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule } from '@angular/common/http';

import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
```

--- src/app/app.component.html ---
```html
<h1>{{ title }}</h1>
<router-outlet></router-outlet>
```

--- src/app/app.component.scss ---
```scss
:host {
  display: block;
  padding: 16px;
}
```

--- src/environments/environment.ts ---
```typescript
export const environment = {
  production: false,
  apiUrl: 'http://localhost:3000'
};
```

--- src/environments/environment.prod.ts ---
```typescript
export const environment = {
  production: true,
  apiUrl: 'https://api.example.com'
};
```

--- src/main.ts ---
```typescript
import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

import { AppModule } from './app/app.module';
import { environment } from './environments/environment';

if (environment.production) {
  enableProdMode();
}

platformBrowserDynamic().bootstrapModule(AppModule)
  .catch(err => console.error(err));
```

--- src/polyfills.ts ---
```typescript
/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * The file is divided into two sections:
 *  1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *  2. Application imports. Files imported after ZoneJS that should be loaded before your main file.
 *
 * The current setup is for "evergreen" browsers.
 */

/***************************************************************************************************
 * BROWSER POLYFILLS
 */

/** Zone JS is required by Angular. */
import 'zone.js';  // Included with Angular CLI.

/***************************************************************************************************
 * APPLICATION IMPORTS
 */
```

--- src/styles.scss ---
```scss
@import '~bootstrap/scss/bootstrap';

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
```

--- Client/app/core/auth-store/logged-in.reducer.ts ---
```typescript
import { createReducer, on, Action } from '@ngrx/store';
import * as AuthActions from '../actions/auth.actions';

export interface AuthState {
  loggedIn: boolean;
}

export const initialState: AuthState = {
  loggedIn: false
};

const _loggedInReducer = createReducer(
  initialState,
  on(AuthActions.loginSuccess, state => ({ ...state, loggedIn: true })),
  on(AuthActions.logout, state => ({ ...state, loggedIn: false }))
);

export function loggedInReducer(state: AuthState | undefined, action: Action) {
  return _loggedInReducer(state, action);
}
```

--- Client/app/home/home.component.html ---
```html
<div class="home">
  <h2>Welcome to the Home Component</h2>
  <p>This is the updated Angular version home component.</p>
</div>
```

--- Client/app/roles/roles.component.ts ---
```typescript
import { Component, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { RoleService } from '../services/role.service';

@Component({
  selector: 'app-roles',
  templateUrl: './roles.component.html',
  styleUrls: ['./roles.component.scss']
})
export class RolesComponent implements OnInit {
  roles$: Observable<string[]> | undefined;

  constructor(private roleService: RoleService) { }

  ngOnInit(): void {
    this.roles$ = this.roleService.getRoles();
  }
}
```